swagger: '2.0'
info:
  title: Cello API Engine Service
  description: "\n    This is swagger docs for Cello API engine.\n    "
  version: v1
basePath: /
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  Bearer:
    in: header
    name: Authorization
    type: apiKey
security:
  - Bearer: []
paths:
  /agents:
    get:
      operationId: agents_list
      summary: List Agents
      description: Filter agents with query parameters.
      parameters:
        - name: page
          in: query
          description: Page of filter
          required: false
          type: integer
          default: 1
          minimum: 1
        - name: per_page
          in: query
          description: Per Page of filter
          required: false
          type: integer
          default: 10
          maximum: 100
          minimum: 1
        - name: status
          in: query
          description: "\n        \n            0: Stopped\n            \n       \
            \     1: Running\n            \n            2: Error\n            "
          required: false
          type: string
          enum:
            - 0
            - 1
            - 2
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/AgentListResponse'
        '400':
          description: ''
          schema:
            $ref: '#/definitions/BadResponse'
        '401':
          description: Permission denied
        '500':
          description: Internal Error
        '403':
          description: Authentication credentials were not provided.
      tags:
        - agents
    post:
      operationId: agents_create
      summary: Create Agent
      description: Create new agent
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/AgentCreateBody'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/AgentID'
        '400':
          description: ''
          schema:
            $ref: '#/definitions/BadResponse'
        '401':
          description: Permission denied
        '500':
          description: Internal Error
        '403':
          description: Authentication credentials were not provided.
      tags:
        - agents
    parameters: []
  /agents/{id}:
    put:
      operationId: agents_update
      summary: Update Agent
      description: Update special agent with id.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/AgentUpdateBody'
      responses:
        '202':
          description: Accepted
        '400':
          description: ''
          schema:
            $ref: '#/definitions/BadResponse'
        '401':
          description: Permission denied
        '500':
          description: Internal Error
        '403':
          description: Authentication credentials were not provided.
      tags:
        - agents
    patch:
      operationId: agents_partial_update
      summary: Partial Update Agent
      description: Partial update special agent with id.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/AgentPatchBody'
      responses:
        '202':
          description: Accepted
        '400':
          description: ''
          schema:
            $ref: '#/definitions/BadResponse'
        '401':
          description: Permission denied
        '500':
          description: Internal Error
        '403':
          description: Authentication credentials were not provided.
      tags:
        - agents
    delete:
      operationId: agents_delete
      summary: Delete Agent
      description: Delete agent
      parameters: []
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found
        '400':
          description: ''
          schema:
            $ref: '#/definitions/BadResponse'
        '401':
          description: Permission denied
        '500':
          description: Internal Error
        '403':
          description: Authentication credentials were not provided.
      tags:
        - agents
    parameters:
      - name: id
        in: path
        required: true
        type: string
  /networks:
    get:
      operationId: networks_list
      summary: List Networks
      description: Filter networks with query parameters.
      parameters:
        - name: page
          in: query
          description: Page of filter
          required: false
          type: integer
          default: 1
          minimum: 1
        - name: per_page
          in: query
          description: Per Page of filter
          required: false
          type: integer
          default: 10
          maximum: 100
        - name: status
          in: query
          description: "\n        Network Status:\n            stopped\n         \
            \   \n            running\n            \n            error\n         \
            \   "
          required: false
          type: string
          enum:
            - stopped
            - running
            - error
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/NetworkListResponse'
        '400':
          description: ''
          schema:
            $ref: '#/definitions/BadResponse'
        '401':
          description: Permission denied
        '500':
          description: Internal Error
        '403':
          description: Authentication credentials were not provided.
      tags:
        - networks
    post:
      operationId: networks_create
      summary: New Network
      description: "Create new network through internal nodes,\nor import exists network\
        \ outside"
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/NetworkCreateBody'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/NetworkID'
        '400':
          description: ''
          schema:
            $ref: '#/definitions/BadResponse'
        '401':
          description: Permission denied
        '500':
          description: Internal Error
        '403':
          description: Authentication credentials were not provided.
      tags:
        - networks
    parameters: []
  /networks/{id}:
    get:
      operationId: networks_read
      summary: Get Network
      description: Get network information
      parameters: []
      responses:
        '200':
          description: ''
        '400':
          description: ''
          schema:
            $ref: '#/definitions/BadResponse'
        '401':
          description: Permission denied
        '500':
          description: Internal Error
        '403':
          description: Authentication credentials were not provided.
      tags:
        - networks
    parameters:
      - name: id
        in: path
        required: true
        type: string
  /networks/{id}/channels:
    post:
      operationId: networks_create_channel
      summary: Create Channel
      description: Create new channel in network
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/ChannelCreateBody'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/ChannelID'
        '400':
          description: ''
          schema:
            $ref: '#/definitions/BadResponse'
        '401':
          description: Permission denied
        '500':
          description: Internal Error
        '403':
          description: Authentication credentials were not provided.
      tags:
        - networks
    parameters:
      - name: id
        in: path
        required: true
        type: string
  /networks/{id}/channels/{channel_id}:
    put:
      operationId: networks_update_channel
      summary: Update Channel
      description: Update channel in network
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/ChannelBody'
      responses:
        '202':
          description: Accepted
        '400':
          description: ''
          schema:
            $ref: '#/definitions/BadResponse'
        '401':
          description: Permission denied
        '500':
          description: Internal Error
        '403':
          description: Authentication credentials were not provided.
      tags:
        - networks
    parameters:
      - name: channel_id
        in: path
        required: true
        type: string
      - name: id
        in: path
        required: true
        type: string
  /networks/{id}/channels/{channel_id}/members:
    get:
      operationId: networks_channels_members_read
      summary: Get Channel Members
      description: Get members of channel
      parameters: []
      responses:
        '200':
          description: ''
        '400':
          description: ''
          schema:
            $ref: '#/definitions/BadResponse'
        '401':
          description: Permission denied
        '500':
          description: Internal Error
        '403':
          description: Authentication credentials were not provided.
      tags:
        - networks
    post:
      operationId: networks_channels_members_create
      summary: Join Node into channel
      description: Join peer node into channel
      parameters: []
      responses:
        '201':
          description: ''
        '400':
          description: ''
          schema:
            $ref: '#/definitions/BadResponse'
        '401':
          description: Permission denied
        '500':
          description: Internal Error
        '403':
          description: Authentication credentials were not provided.
      tags:
        - networks
    delete:
      operationId: networks_channels_members_delete
      summary: Remove node from channel
      description: Remove node from channel
      parameters: []
      responses:
        '204':
          description: ''
        '400':
          description: ''
          schema:
            $ref: '#/definitions/BadResponse'
        '401':
          description: Permission denied
        '500':
          description: Internal Error
        '403':
          description: Authentication credentials were not provided.
      tags:
        - networks
    parameters:
      - name: channel_id
        in: path
        required: true
        type: string
      - name: id
        in: path
        required: true
        type: string
  /networks/{id}/members:
    get:
      operationId: networks_members
      summary: Get Consortium Members
      description: Get consortium members of network.
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/NetworkMemberResponse'
        '400':
          description: ''
          schema:
            $ref: '#/definitions/BadResponse'
        '401':
          description: Permission denied
        '500':
          description: Internal Error
        '403':
          description: Authentication credentials were not provided.
      tags:
        - networks
    parameters:
      - name: id
        in: path
        required: true
        type: string
  /networks/{id}/operations:
    post:
      operationId: networks_operate
      summary: Operate Network
      description: Operate on network
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/NetworkOperationBody'
      responses:
        '202':
          description: Accepted
        '400':
          description: ''
          schema:
            $ref: '#/definitions/BadResponse'
        '401':
          description: Permission denied
        '500':
          description: Internal Error
        '403':
          description: Authentication credentials were not provided.
      tags:
        - networks
    parameters:
      - name: id
        in: path
        required: true
        type: string
  /nodes:
    get:
      operationId: nodes_list
      summary: List Nodes
      description: Filter nodes with query parameters.
      parameters:
        - name: page
          in: query
          description: Page of filter
          required: false
          type: integer
          default: 1
          minimum: 1
        - name: per_page
          in: query
          description: Per Page of filter
          required: false
          type: integer
          default: 10
          maximum: 100
          minimum: 1
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/NetworkListResponse'
        '400':
          description: ''
          schema:
            $ref: '#/definitions/BadResponse'
        '401':
          description: Permission denied
        '500':
          description: Internal Error
        '403':
          description: Authentication credentials were not provided.
      tags:
        - nodes
    post:
      operationId: nodes_create
      summary: Create Node
      description: Create new node
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/NodeCreateBody'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/NodeID'
        '400':
          description: ''
          schema:
            $ref: '#/definitions/BadResponse'
        '401':
          description: Permission denied
        '500':
          description: Internal Error
        '403':
          description: Authentication credentials were not provided.
      tags:
        - nodes
    parameters: []
  /nodes/{id}:
    delete:
      operationId: nodes_delete
      summary: Delete Node
      description: Delete node
      parameters: []
      responses:
        '204':
          description: No Content
        '400':
          description: ''
          schema:
            $ref: '#/definitions/BadResponse'
        '401':
          description: Permission denied
        '500':
          description: Internal Error
        '403':
          description: Authentication credentials were not provided.
      tags:
        - nodes
    parameters:
      - name: id
        in: path
        required: true
        type: string
  /nodes/{id}/operations:
    post:
      operationId: nodes_operate
      summary: Operate Node
      description: Do some operation on node, start/stop/restart
      parameters:
        - name: action
          in: query
          description: "\n        Operation for node:\n            start\n       \
            \     \n            stop\n            \n            restart\n        \
            \    "
          required: true
          type: string
          enum:
            - start
            - stop
            - restart
      responses:
        '202':
          description: Accepted
        '400':
          description: ''
          schema:
            $ref: '#/definitions/BadResponse'
        '401':
          description: Permission denied
        '500':
          description: Internal Error
        '403':
          description: Authentication credentials were not provided.
      tags:
        - nodes
    parameters:
      - name: id
        in: path
        required: true
        type: string
definitions:
  AgentResponse:
    description: Agents data
    required:
      - id
      - name
      - worker_api
      - capacity
      - log_level
      - type
      - status
      - created_at
      - schedulable
    type: object
    properties:
      id:
        title: Id
        description: ID of Agent
        type: string
        minLength: 1
      name:
        title: Name
        description: Name of Agent
        type: string
        maxLength: 36
        minLength: 4
      worker_api:
        title: Worker api
        description: API address of worker
        type: string
        maxLength: 128
        minLength: 6
      capacity:
        title: Capacity
        description: Capacity of Agent
        type: integer
        minimum: 1
      log_level:
        title: Log level
        description: "\n        Log levels:\n            0: Info\n            \n \
          \           1: Warning\n            \n            2: Debug\n           \
          \ \n            3: Error\n            "
        type: string
        enum:
          - 0
          - 1
          - 2
          - 3
      type:
        title: Type
        description: "\n        Agent types:\n            0: Docker\n            \n\
          \            1: Kubernetes\n            "
        type: string
        enum:
          - 0
          - 1
      status:
        title: Status
        description: "\n        \n            0: Stopped\n            \n         \
          \   1: Running\n            \n            2: Error\n            "
        type: string
        enum:
          - 0
          - 1
          - 2
      created_at:
        title: Created at
        description: Create time
        type: string
        format: date-time
      schedulable:
        title: Schedulable
        description: Whether agent can be schedulable
        type: boolean
  AgentListResponse:
    required:
      - total
      - data
    type: object
    properties:
      total:
        title: Total
        description: Total number of data
        type: integer
        minimum: 0
      data:
        description: Agents data
        type: array
        items:
          $ref: '#/definitions/AgentResponse'
  BadResponse:
    required:
      - code
    type: object
    properties:
      code:
        title: Code
        description: "\n        Error Codes:\n        \n            20000: Unknown\
          \ Error\n            \n            20001: Validation parameter error\n \
          \           \n            20002: Parse error\n            \n           \
          \ 20003: Resource is inuse\n            "
        type: integer
      detail:
        title: Detail
        description: Error Messages
        type: string
  AgentCreateBody:
    required:
      - name
      - worker_api
      - capacity
      - log_level
      - type
    type: object
    properties:
      name:
        title: Name
        description: Name of Agent
        type: string
        maxLength: 36
        minLength: 4
      worker_api:
        title: Worker api
        description: API address of worker
        type: string
        maxLength: 128
        minLength: 6
      capacity:
        title: Capacity
        description: Capacity of Agent
        type: integer
        minimum: 1
      log_level:
        title: Log level
        description: "\n        Log levels:\n            0: Info\n            \n \
          \           1: Warning\n            \n            2: Debug\n           \
          \ \n            3: Error\n            "
        type: string
        enum:
          - 0
          - 1
          - 2
          - 3
      type:
        title: Type
        description: "\n        Agent types:\n            0: Docker\n            \n\
          \            1: Kubernetes\n            "
        type: string
        enum:
          - 0
          - 1
  AgentID:
    required:
      - id
    type: object
    properties:
      id:
        title: Id
        description: ID of Agent
        type: string
        minLength: 1
  AgentUpdateBody:
    type: object
    properties:
      name:
        title: Name
        description: Name of Agent
        type: string
        maxLength: 36
        minLength: 4
        x-nullable: true
      capacity:
        title: Capacity
        description: Capacity of Agent
        type: integer
        minimum: 1
        x-nullable: true
      log_level:
        title: Log level
        description: "\n        Log levels:\n            0: Info\n            \n \
          \           1: Warning\n            \n            2: Debug\n           \
          \ \n            3: Error\n            "
        type: string
        enum:
          - 0
          - 1
          - 2
          - 3
        x-nullable: true
      status:
        title: Status
        description: "\n        \n            0: Stopped\n            \n         \
          \   1: Running\n            \n            2: Error\n            "
        type: string
        enum:
          - 0
          - 1
          - 2
        x-nullable: true
  AgentPatchBody:
    type: object
    properties:
      name:
        title: Name
        description: Name of Agent
        type: string
        maxLength: 36
        minLength: 4
        x-nullable: true
      capacity:
        title: Capacity
        description: Capacity of Agent
        type: integer
        minimum: 1
        x-nullable: true
      log_level:
        title: Log level
        description: "\n        Log levels:\n            0: Info\n            \n \
          \           1: Warning\n            \n            2: Debug\n           \
          \ \n            3: Error\n            "
        type: string
        enum:
          - 0
          - 1
          - 2
          - 3
        x-nullable: true
  NetworkResponse:
    required:
      - id
      - status
      - created_at
      - updated_at
    type: object
    properties:
      id:
        title: Id
        description: Network ID
        type: string
        minLength: 1
      status:
        title: Status
        description: "\n        Network Status:\n            stopped\n           \
          \ \n            running\n            \n            error\n            "
        type: string
        enum:
          - stopped
          - running
          - error
      created_at:
        title: Created at
        description: Network create time
        type: string
        format: date-time
      updated_at:
        title: Updated at
        description: Network update time
        type: string
        format: date-time
  NetworkListResponse:
    required:
      - total
      - data
    type: object
    properties:
      total:
        title: Total
        description: Total number of networks
        type: integer
      data:
        type: array
        items:
          $ref: '#/definitions/NetworkResponse'
  NetworkCreateBody:
    required:
      - create_type
    type: object
    properties:
      create_type:
        title: Create type
        description: "\n        Network Create Types:\n            new\n         \
          \   \n            import\n            "
        type: string
        enum:
          - new
          - import
  NetworkID:
    required:
      - id
    type: object
    properties:
      id:
        title: Id
        description: Network ID
        type: string
        minLength: 1
  ChannelCreateBody:
    required:
      - name
      - type
    type: object
    properties:
      name:
        title: Name
        description: Channel Name
        type: string
        maxLength: 36
        minLength: 4
      type:
        title: Type
        description: "\n        Channel Types:\n            system\n            \n\
          \            normal\n            "
        type: string
        enum:
          - system
          - normal
  ChannelID:
    required:
      - id
    type: object
    properties:
      id:
        title: Id
        description: Channel ID
        type: string
        minLength: 1
  ChannelBody:
    required:
      - name
    type: object
    properties:
      name:
        title: Name
        description: Channel Name
        type: string
        maxLength: 36
        minLength: 4
  NetworkMember:
    required:
      - id
      - type
      - url
    type: object
    properties:
      id:
        title: Id
        description: Network member id
        type: string
        minLength: 1
      type:
        title: Type
        description: "\n        Node Types:\n            ca\n            \n      \
          \      orderer\n            \n            peer\n            "
        type: string
        enum:
          - ca
          - orderer
          - peer
      url:
        title: Url
        description: URL of member
        type: string
        minLength: 1
  NetworkMemberResponse:
    required:
      - data
    type: object
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/NetworkMember'
  NetworkOperationBody:
    required:
      - action
      - nodes
    type: object
    properties:
      action:
        title: Action
        description: "\n        Network Operations:\n            join\n          \
          \  \n            leave\n            "
        type: string
        enum:
          - join
          - leave
      nodes:
        description: Nodes ID values
        type: array
        items:
          description: Node ID value
          type: string
          maxLength: 64
          minLength: 1
  NodeCreateBody:
    required:
      - network_type
      - type
    type: object
    properties:
      network_type:
        title: Network type
        description: "\n        Network types:\n            fabric1.3\n          \
          \  \n            fabric1.4\n            "
        type: string
        enum:
          - fabric1.3
          - fabric1.4
      type:
        title: Type
        description: "\n        Node Types:\n            ca\n            \n      \
          \      orderer\n            \n            peer\n            "
        type: string
        enum:
          - ca
          - orderer
          - peer
  NodeID:
    required:
      - id
    type: object
    properties:
      id:
        title: Id
        description: ID of node
        type: string
        minLength: 1
